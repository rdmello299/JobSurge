# Generated by Django 3.1.4 on 2023-10-14 08:02

import account.managers
import account.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator])),
                ('role', models.CharField(default='role', max_length=50)),
                ('is_technician', models.BooleanField(default=False, verbose_name='Technician')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Updated_date_time', models.DateTimeField(auto_now=True, verbose_name='DateTime')),
                ('Checked', models.BooleanField(default=False, verbose_name='check')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('School', models.CharField(blank=True, max_length=50)),
                ('Degree', models.CharField(blank=True, max_length=50)),
                ('Field_of_study', models.CharField(blank=True, max_length=50)),
                ('Start_date', models.DateField()),
                ('End_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(blank=True, max_length=50)),
                ('Employment_type', models.CharField(blank=True, choices=[], max_length=50)),
                ('Company', models.CharField(blank=True, max_length=50)),
                ('Start_date', models.DateField()),
                ('End_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Message', models.TextField(max_length=1000, null=True)),
                ('Checked', models.BooleanField(default=False, verbose_name='check')),
                ('Updated_date_time', models.DateTimeField(auto_now=True, verbose_name='DateTime')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('Recovery_email', models.EmailField(max_length=254, null=True, validators=[django.core.validators.EmailValidator])),
                ('Phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[account.validators.phonenumberValidator])),
                ('Designation', models.CharField(blank=True, max_length=50, null=True)),
                ('About', models.CharField(blank=True, max_length=50, null=True)),
                ('Licence', models.BooleanField(default=False, verbose_name='Licence')),
                ('Totalexperience', models.IntegerField(blank=True, default=0, null=True)),
                ('Address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address', to='account.address')),
                ('Education', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='education', to='account.education')),
                ('Experience', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='experience', to='account.experience')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
